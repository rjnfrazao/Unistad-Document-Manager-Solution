#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.


#ssh
#ENV SSH_PASSWD "root:Docker!"
#RUN apt-get update \
#        && apt-get install -y --no-install-recommends dialog \
#        && apt-get update \
#  && apt-get install -y --no-install-recommends openssh-server \
#  && echo "$SSH_PASSWD" | chpasswd 

#COPY ["Unistad Document Manager/sshd_config", "/etc/ssh/"]
#COPY ["Unistad Document Manager/init_container.sh", "/usr/local/bin/"]

FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app
EXPOSE 80 443 
#EXPOSE 2222


FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
WORKDIR /src
COPY ["Unistad Document Manager.csproj", "Unistad Document Manager/"]
COPY ["StUnistad Document Manager/orageLibrary/StorageLibrary.csproj", "StorageLibrary/"]
COPY ["ConfigurationLibrary/ConfigurationLibrary.csproj", "ConfigurationLibrary/"]
RUN dotnet restore "Unistad Document Manager/Unistad Document Manager.csproj"
COPY . .
WORKDIR "/src/Unistad Document Manager"
RUN dotnet build "Unistad Document Manager.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "Unistad Document Manager.csproj" -c Release -o /app/publish


FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Unistad Document Manager.dll", "--add-host host.docker.internal:host-gateway"]
#ENTRYPOINT ["bash", "init_container.sh"]

